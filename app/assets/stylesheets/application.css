/*
 * This is a manifest file that'll be compiled into application.css, which will include all the files
 * listed below.
 *
 * Any CSS and SCSS file within this directory, lib/assets/stylesheets, or any plugin's
 * vendor/assets/stylesheets directory can be referenced here using a relative path.
 *
 * You're free to add application-wide styles to this file and they'll appear at the bottom of the
 * compiled file so the styles you add here take precedence over styles defined in any other CSS/SCSS
 * files in this directory. Styles in this file should be added after the last require_* statement.
 * It is generally better to create a new file per style scope.
 *
 *= require_tree .
 *= require_self
 *= require trix
 */

 trix-editor:empty:not(:focus)::before {
  color: #E7E5E4;
}

.trix-content a {
  text-decoration: underline;
  color: #3b82f6;
}

trix-toolbar .trix-button-row {
  display: block;
}

.trix-button-group {
  float: left;
}

.trix-button-group.trix-button-group--history-tools {
  float: right;
}

html:not(.fontawesome-i2svg-complete) .icon-substitute {
  display: inherit;
}

html.fontawesome-i2svg-complete .icon-substitute {
  display: none;
}

a.external-link:after {
  font-family: "Font Awesome 6 Pro";
  font-style: normal;
  content: "\f08e";
  margin-left: 0.5rem;
  font-weight: normal;
}

.actionable:hover .actions {
  display: inline-block;
}

.sidecar a:hover, .sidecar .active {
  color: rgb(230, 100, 37);
}

@media (prefers-color-scheme: dark) {
  .sidecar a {
    color: #d1d5db;
  }

  .sidecar:hover a {
    color: #f3f4f6;
  }

  .sidecar a:hover {
    color: rgb(230, 100, 37);
  }
}

.dt-switch-container .switch-button {
  transform: translateX(100%);
}

.dt-switch-container {
  background-color: rgb(102, 102, 102);
}

input.dt-switch.left-value:checked ~ .dt-switch-container {
  /* background: #e11d48; */
  background: #dc2626;
}

input.dt-switch.left-value:disabled:checked ~ .dt-switch-container {
  background: #ddd;
  cursor: not-allowed;
}

input.dt-switch.right-value:checked ~ .dt-switch-container {
  background: #4d7c0f;
}

input.dt-switch.right-value:disabled:checked ~ .dt-switch-container {
  background: #ddd;
  cursor: not-allowed;
}

input.dt-switch:disabled ~ .dt-switch-container {
  background: #ddd;
  cursor: not-allowed;
}

input.dt-switch.left-value:checked ~ .dt-switch-container .switch-button {
  transform: translateX(0);
  transition: transform 0.25s;
}

input.dt-switch.right-value:checked ~ .dt-switch-container .switch-button {
  transform: translateX(195%);
  transition: transform 0.25s;  
}

span.dt-switch .switch-container {
  background: #ddd;
  outline: 1px solid #bbb;
  display: inline-block;
  border-radius: 9999px;
  height: 2.5em;
  position: relative;
  padding: 0.25em;
  width: 14.5em;
  flex-shrink: 0;
  transition: background-color 0.25s;
}

span.dt-switch .switch-container.disabled {
  background: #eee;
  color: #ccc;
  cursor: not-allowed;
}  

span.dt-switch .switch-container label {
  display: inline-block;
  width: 6em;
  font-weight: 500;
  text-align: center;
  z-index: 10;
  position: relative;
  padding: 0.25rem 0;
  cursor: pointer;
}

span.dt-switch.disabled .switch-container label {
  cursor: not-allowed;
}

span.dt-switch .switch-container label.center-label {
  width: 2em;
  color: rgba(255, 255, 255, 0.0);
  cursor: default;
}

span.dt-switch .switch-container .switch-button {
  background: white;
  display: block;
  position: absolute;
  width: 6em;
  height: 2em;
  border-radius: 9999px;
  transform: translateX(0);
  transition: all 0.25s;
}

span.dt-switch.disabled .switch-container label.center-label {
  cursor: not-allowed;
}

span.dt-switch input.center-value:checked ~ .switch-container .switch-button {
  transform: translateX(6em);
  width: 2em;
}

span.dt-switch input.right-value:checked ~ .switch-container .switch-button {
  transform: translateX(8em);
}  

span.dt-switch input.left-value:checked ~ .switch-container .left-label {
  color: #b91c1c;
}

span.dt-switch input.right-value:checked ~ .switch-container .right-label {
  color: #4d7c0f;
}
/*
span.dt-switch input.right-value:checked + .switch-container {
  background: #4d7c0f;
}

span.dt-switch input.left-value:checked ~ .switch-container {
  background: #b91c1c;
}


span.dt-switch input.right-value:checked ~ .switch-container .left-label {
  color: #ecfccb;
}

span.dt-switch input.right-value:checked ~ .switch-container .left-label:hover {
  color: white;
}

span.dt-switch input.left-value:checked ~ .switch-container .right-label {
  color: #fee2e2;
}

span.dt-switch input.left-value:checked ~ .switch-container .right-label:hover {
  color: white;
}

span.dt-switch input.center-value:checked ~ .switch-container {
  background: #78716c;
} */


.dt-switch-indicator {
  display: none;
}

.dt-switch.selected-left ~ .dt-switch-indicator-left {
  display: inline-block;
}

.dt-switch.selected-center ~ .dt-switch-indicator-center {
  display: inline-block;
}

.dt-switch.selected-right ~ .dt-switch-indicator-right {
  display: inline-block;
}

@media (prefers-color-scheme: dark) {
  input.dt-switch.right-value:disabled:checked ~ .dt-switch-container, .switch-disabled .dt-switch-container {
    background: #444 !important;
    cursor: not-allowed;
  }

  input.dt-switch.right-value:disabled:checked ~ .dt-switch-container .switch-button {
    background: #222;
    cursor: not-allowed;
  }

  input.dt-switch.right-value:disabled ~ label {
    color: #666;
    cursor: not-allowed;
  }

}

input[type="text"].is-invalid {
  border-color: #ef4444;
  background: url("octagon-exclamation.svg") no-repeat right 0.5rem center/1.5rem;
  background-size: 1rem;
}

input[type="radio"].is-invalid {
  border-color: #ef4444;
}

input[type="radio"].is-invalid + label {
  color: #ef4444;
  font-weight: bold;
}

button:focus .idle-caption {
  display: none;
}

.active-caption {
  display: none;
}

button:focus .active-caption {
  display: inline;
}

a .active {
  display: none;
}

a:focus .active {
  display: inline;
}

a:focus .active-hidden {
  display: none;
}

.field_with_errors input {
  border-color: red;
  color: red;
}

.error-message {
  display: none;
}

.field_with_errors .error-message {
  display: block;
}

table.divide-y tr:not(:last-child) {
  border-bottom: 1px solid #d2d6dc;
}

.dirty-warning {
  display: none;
}

form.is-dirty .dirty-warning {
  display: block;
}

.dropdown .dropdown-menu {
  display: none;
  opacity: 0;
}

.dropdown.dropdown-active .dropdown-menu {
  display: block;
  opacity: 1;
}

.dropdown:has(:checked) .dropdown-menu {
  display: block;
  opacity: 1;
}

details > summary {
  list-style: none;
}

summary::marker, /* Latest Chrome, Edge, Firefox */ 
summary::-webkit-details-marker /* Safari */ {
  display: none;
  content: "";
}

.date-badge-now ~ .date-badge-next {
  display: none;
}

.multi-selector {
  display: none;
}

.multi-selector-wrapper:hover .multi-selector {
  display: block;
}

.multi-select-enabled {
  .multi-selector {
    display: block;
  }

  .not-multi-selector {
    display: none;
  }

  #selection_toolbar_items {
    display: block;
  }

  #multi-select-actions {
    height: auto;
  }
}

.input_group_with_error input {
  border-color: red;
}

.input_group_with_error label {
  color: red;
}

#selection_toolbar {
  display: none;
}

.selections-present #selection_toolbar {
  display: flex;
}

.selections-present #normal_toolbar {
  display: none;
}

.blank-slate {
  display: block;
}

.snork:has(*) + .blank-slate {
  display: none;
}