= turbo_frame_tag :modal_overlay do
  = content_tag :section, role: "dialog", class: "fixed backdrop-blur-md inset-0 pt-16 md:pb-16 bg-black/50 z-20", data: { open: "true", controller: "modal", modal_return_url_value: unit_events_path(current_unit) }
    article.mx-auto.max-w-xl.bg-white.rounded-lg
      = form_with url: unit_event_cancellations_path(current_unit, @event), method: :post, data: { turbo: false } do |f|
        header.flex.flex-row.justify-between.border-b.px-6.py-3.text-stone-500
          .left
            h1 = "Cancel Event"

          .right.flex.flex-row.gap-2.text-stone-500.text-lg

            = button_tag type: "button",
                         class: "x-close-button flex flex-row items-center block w-6 h-6 -mr-2 rounded hover:bg-stone-100 hover:text-stone-800",
                         data: { action: "modal#close" },
                         title: "Cancel" do
              i.fa-regular.fa-times.fa-fw

        section.px-6.py-6.text-sm
          - if @event.past?
            .rounded.p-2.bg-amber-100.border.border-amber-200.mb-4.text-amber-700.font-medium
              i.fa-solid.fa-exclamation-triangle.mr-2
              = t("events.cancel.past_warning")

          p.mb-4
            = raw("You are cancelling <strong>#{@event.title}</strong> on ")
            span.whitespace-nowrap.font-bold
              = @event.starts_at.strftime("%B %-d")
            |.&nbsp

            - if @event.draft?
              = "The event is an unpublished draft."
            - elsif !@event.requires_rsvp
              = "No RSVP was required."
            - elsif @event.rsvps.accepted.count.positive?
              = "There are #{@event.rsvps.accepted.count} members planning to attend"

              - if @event.rsvps.declined.count.positive?
                = " and #{@event.rsvps.declined.count} who declined"

              |&nbsp;
              = link_to "(View RSVPs)",
                        unit_event_rsvps_path(current_unit, @event),
                        class: "underline text-blue-600",
                        data: { turbo_action: "advance" }

              = "."
            - else
              = "No one is planning to attend."

          fieldset.border-t.pt-4.mt-4#message_fields
            legend.font-semibold.float-left.w-full.mb-4
              i.fa-light.fa-envelope.mr-2
              = "Cancellation Message"
          
            // NONE RADIO
            .py-1
              = label_tag :event_cancellation_message_audience_none do
                = radio_button_tag "event_cancellation[message_audience]", :none, true, class: "peer hidden"
                .inline-block.peer-checked:hidden
                  i.fa-regular.fa-circle.text-brand-500.fa-lg
                .hidden.peer-checked:inline-block
                  i.fa-solid.fa-circle-dot.text-brand-500.fa-lg
                  
                span.ml-2= "No, don't send a message"                 

            // ACCEPTORS RADIO
            - if @event.rsvps?
              .py-1
                = label_tag :event_cancellation_message_audience_acceptors do
                  = radio_button :event_cancellation, :message_audience, :acceptors, class: "peer hidden"
                  .inline-block.peer-checked:hidden
                    i.fa-regular.fa-circle.text-brand-500.fa-lg
                  .hidden.peer-checked:inline-block
                    i.fa-solid.fa-circle-dot.text-brand-500.fa-lg
                    
                  span.ml-2= "Yes, to the #{@event.rsvps.accepted.count} who plan on attending"             

            // ACTIVE MEMBERS RADIO
            .py-1
              = label_tag :event_cancellation_message_audience_active_members do
                = radio_button :event_cancellation, :message_audience, :active_members, class: "peer hidden"
                .inline-block.peer-checked:hidden
                  i.fa-regular.fa-circle.text-brand-500.fa-lg
                .hidden.peer-checked:inline-block
                  i.fa-solid.fa-circle-dot.text-brand-500.fa-lg
                  
                span.ml-2= "Yes, to all #{current_unit.members.contactable?.status_active.count} active, contactable members"
              

            // ALL MEMBERS RADIO
            - if current_unit.members.registered.count.positive?
              .py-1
                = label_tag :message_audience_all_members do
                  = radio_button :event_cancellation, :message_audience, :all_members, class: "peer hidden"
                  .inline-block.peer-checked:hidden
                    i.fa-regular.fa-circle.text-brand-500.fa-lg
                  .hidden.peer-checked:inline-block
                    i.fa-solid.fa-circle-dot.text-brand-500.fa-lg
                    
                  span.ml-2= "Yes, to all #{current_unit.members.contactable?.count} registered, contactable members"         

            = text_area "event_cancellation", "message",
              class: "border rounded w-full h-24 p-2 placholder-stone-400 border-stone-500 mt-2 text-sm",
              autofocus: true,
              placeholder: t("events.placeholders.cancellation_message")

          - if @event.series?
            fieldset.border-t.pt-4.mt-4
              legend.font-semibold.float-left.w-full.mb-4
                i.fa-light.fa-rotate.mr-2
                = "This event is part of a series"

              div.py-1
                = label_tag :event_cancellation_cancel_series_false do
                  = radio_button :event_cancellation, :cancel_series, :false, class: "peer hidden"
                  .inline-block.peer-checked:hidden
                    i.fa-regular.fa-circle.text-brand-500.fa-lg
                  .hidden.peer-checked:inline-block
                    i.fa-solid.fa-circle-dot.text-brand-500.fa-lg
                    
                  span.ml-2= "Cancel only this event"

              div.py-1
                = label_tag :event_cancellation_cancel_series_true do
                  = radio_button :event_cancellation, :cancel_series, :true, class: "peer hidden"
                  .inline-block.peer-checked:hidden
                    i.fa-regular.fa-circle.text-brand-500.fa-lg
                  .hidden.peer-checked:inline-block
                    i.fa-solid.fa-circle-dot.text-brand-500.fa-lg
                    
                  span.ml-2= "Cancel this event and all future occurrences"               


          fieldset.border-t.pt-4.mt-4
            legend.font-semibold.float-left.w-full.mb-4
              i.fa-light.fa-trash-can.mr-2
              = "Delete Event"

            div.py-1
              = label_tag :event_cancellation_disposition_delete do
                = radio_button :event_cancellation, :disposition, :delete, class: "peer hidden"
                .inline-block.peer-checked:hidden
                  i.fa-regular.fa-circle.text-brand-500.fa-lg
                .hidden.peer-checked:inline-block
                  i.fa-solid.fa-circle-dot.text-brand-500.fa-lg

                span.ml-2= "Delete this event"

            - if @event.published?
              div.py-1
                = label_tag :event_cancellation_disposition_unpublish do
                  = radio_button :event_cancellation, :disposition, :unpublish, class: "peer hidden"
                  .inline-block.peer-checked:hidden
                    i.fa-regular.fa-circle.text-brand-500.fa-lg
                  .hidden.peer-checked:inline-block
                    i.fa-solid.fa-circle-dot.text-brand-500.fa-lg
                    
                  span.ml-2= "Unpublish this event"                   


            div.py-1
              = label_tag :event_cancellation_disposition_cancel do
                = radio_button :event_cancellation, :disposition, :cancel, class: "peer hidden"
                .inline-block.peer-checked:hidden
                  i.fa-regular.fa-circle.text-brand-500.fa-lg
                .hidden.peer-checked:inline-block
                  i.fa-solid.fa-circle-dot.text-brand-500.fa-lg
                  
                span.ml-2= "Leave on calendar as cancelled"         

        // footer, containing right-justified buttons
        footer.px-6.py-3.flex.flex-col.md:flex-row.gap-2.justify-end.text-sm.border-t
          = f.button "Close",
                  type: "button",
                  class: "block w-full md:w-fit md:inline-block px-6 py-3 md:py-2 font-medium bg-stone-200 hover:bg-stone-300 rounded",
                  data: { action: "click->modal#close" }

          = f.submit t("events.cancel.proceed"),
            class: "font-medium inline-block bg-brand-500 hover:bg-brand-700 text-white px-4 py-3 md:py-2 w-full md:w-fit rounded cursor-pointer",
            data: { confirm: t("events.cancel.confirm") },
            onclick: "return confirm('Are you sure you want to cancel this event?');"

  css:
    textarea::placeholder {
      color: #a8a29e;
      opacity: 1;
    }

    input[type='radio'] {
      accent-color: red;
    }    

    #event_cancellation_message {
      display: block;
    }

    #message_fields:has(#event_cancellation_message_audience_none:checked) #event_cancellation_message {
      display: none;
    }